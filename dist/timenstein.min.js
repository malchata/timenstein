var Timenstein=function(){"use strict";var e="[Timenstein] Can't continue because the required performance APIs are not supported in this browser.",n="[Timenstein] Can't create a performance mark because a handle wasn't given for it.";return function(r,t){var i,a,s,o,u={},m={},c=!1,f=t&&"mark"in t&&"measure"in t&&"getEntriesByName"in t&&"clearMarks"in t&&"clearMeasures"in t,g=function(e){return JSON.parse(JSON.stringify(e))},h=function(e,n){return e>=1&&e<=n},l=function(e){return t.getEntriesByName(e)[0]},p=function(e){i&&console[a](e)};function Timenstein(n){return f?(c=!0,i=(n=n||{}).errorLogging||!0,a=/^(log|warn|error)$/.test(n.errorLogLevel)?n.errorLogLevel:"warn",s=n.namespace||"timenstein",o=n.namespaceDelimiter||"::",c):(p(e),c)}return Timenstein.prototype.mark=function(r,i){if(!c)return p(e),c;if(!r)return p(n),!1;if(r.indexOf(o)>-1)return p("[Timenstein] The given handle contains the namespace delimiter."),!1;var a,m=""+s+o+r;if(m in u&&u[m].locked)return p("[Timenstein] Can't create a performance mark for the given handle because it is locked."),!1;m in u?a=u[m].entries.length+1:(a=1,u[m]={locked:!1,entries:[]});var f=m+"-"+a;return t.mark(f),i&&(u[m].locked=!0),u[m].entries.push(g(l(f))),{markName:f,markNumber:a}},Timenstein.prototype.measure=function(r,i,a){if(!c)return p(e),c;if(!r)return p(n),!1;var f=""+s+o+r;if(f in u==!1)return p("[Timenstein] The given handle doesn't have any marks associated with it."),!1;var d=u[f].entries.length;if(d<2)return p("[Timenstein] The given handle must have at least two associated marks in order to make a measurement"),!1;if(!((i=i||1)<(a=a||d)&&a>i&&h(i,d)&&h(a,d)))return p("[Timenstein] The given measurement range is not valid for the handle given."),!1;f in m==!1&&(m[f]={entries:[]}),t.measure(f,l(r+"-"+i),l(r+"-"+a));var v=g(l(f));return v.startSegment=i,v.endSegment=a,m[f].entries.push(v),!0},Timenstein.prototype.clear=function(n,r){if(!c)return p(e),c;if(!/^m(arks|easures)$/i.test(n))return p('[Timenstein] When invoking the `clear` method, its sole argument must either be "marks" or "measures".'),!1;var i=n.substr(0,n.length-1);return t.getEntries().forEach((function(e){var a=e.entryType===i&&0===e.name.indexOf(""+s+o);r instanceof RegExp&&(a=a&&r.test(e.name)),a&&t["clear"+(n[0].toUpperCase()+n.slice(1))](e.name)})),!0},Timenstein.prototype.getMarks=function(){return u},Timenstein.prototype.getMeasures=function(){return m},Timenstein}(window,performance)}();
