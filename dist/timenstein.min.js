var Timenstein=function(){"use strict";var e="[Timenstein] Can't continue because the required performance APIs are not supported in this browser.",n="[Timenstein] Can't create a performance mark because a handle wasn't given for it.";return function(r){var t,i,a,s,o={},u={},m=!1,c=r&&"mark"in r&&"measure"in r&&"getEntriesByName"in r&&"clearMarks"in r&&"clearMeasures"in r,f=function(e,n){return e>=1&&e<=n},g=function(e){return"toJSON"in window.PerformanceEntry.prototype?r.getEntriesByName(e)[0].toJSON():JSON.parse(JSON.stringify(r.getEntriesByName(e)[0]))},h=function(e){t&&console[i](e)};function Timenstein(n){return c?(m=!0,t=(n=n||{}).errorLogging||!0,i=/^(log|warn|error)$/.test(n.errorLogLevel)?n.errorLogLevel:"warn",a=n.namespace||"timenstein",s=n.namespaceDelimiter||"::",m):(h(e),m)}return Timenstein.prototype.mark=function(t,i){if(!m)return h(e),m;if(!t)return h(n),!1;if(t.indexOf(s)>-1)return h("[Timenstein] The given handle contains the namespace delimiter."),!1;var u,c=""+a+s+t;if(c in o&&o[c].locked)return h("[Timenstein] Can't create a performance mark for the given handle because it is locked."),!1;c in o?u=o[c].entries.length+1:(u=1,o[c]={locked:!1,entries:[]});var f=c+"-"+u;return r.mark(f),i&&(o[c].locked=!0),o[c].entries.push(g(f)),{markName:f,markNumber:u}},Timenstein.prototype.measure=function(t,i,c){if(!m)return h(e),m;if(!t)return h(n),!1;var l=""+a+s+t;if(l in o==!1)return h("[Timenstein] The given handle doesn't have any marks associated with it."),!1;var p=o[l].entries.length;if(p<2)return h("[Timenstein] The given handle must have at least two associated marks in order to make a measurement"),!1;if(!((i=i||1)<(c=c||p)&&c>i&&f(i,p)&&f(c,p)))return h("[Timenstein] The given measurement range is not valid for the handle given."),!1;l in u==!1&&(u[l]={entries:[]}),r.measure(l,g(t+"-"+i),g(t+"-"+c));var d=g(l);return d.startSegment=i,d.endSegment=c,u[l].entries.push(d),!0},Timenstein.prototype.clear=function(n,t){if(!m)return h(e),m;if(!/^m(arks|easures)$/i.test(n))return h('[Timenstein] When invoking the `clear` method, its sole argument must either be "marks" or "measures".'),!1;var i=n.substr(0,n.length-1);return r.getEntries().forEach((function(e){var o=e.entryType===i&&0===e.name.indexOf(""+a+s);t instanceof RegExp&&(o=o&&t.test(e.name)),o&&r["clear"+(n[0].toUpperCase()+n.slice(1))](e.name)})),!0},Timenstein.prototype.getMarks=function(){return o},Timenstein.prototype.getMeasures=function(){return u},Timenstein}(window.performance)}();
