var Timenstein=function(){"use strict";var e="[Timenstein] Can't continue because the required performance APIs are not supported in this browser.",r="[Timenstein] Can't create a performance mark because a handle wasn't given for it.";return function(n,t){var i,a,s,o,u={},m={},c=!1,f=t&&"mark"in t&&"measure"in t&&"getEntriesByName"in t&&"clearMarks"in t&&"clearMeasures"in t&&"PerformanceObserver"in n,p=function(e,r){return e>=1&&e<=r},l=function(e){return e.split("-")[0]},v=function(e){return"toJSON"in n.PerformanceEntry.prototype?e.toJSON():JSON.parse(JSON.stringify(e))},g=function(e){i&&console[a](e)};function Timenstein(r){return f?(c=!0,i=(r=r||{}).errorLogging||!0,a=/^(log|warn|error)$/.test(r.errorLogLevel)?r.errorLogLevel:"warn",s=r.namespace||"timenstein",o=r.namespaceDelimiter||"::",new PerformanceObserver((function(e){e.getEntries().forEach((function(e){var r=e.name,n=e.entryType;if(0===r.indexOf(""+s+o)){if("mark"===n){var t=v(e),i=l(r),a=r.split("-")[1];t.segmentNumber=a,u[i].entries.push(t)}var c;if("measure"===n){var f=l(r),p=[(c=r.split("-"))[1],c[2]],g=v(e);g.startSegment=p[0],g.endSegment=p[1],m[f].entries.push(g)}}}))})).observe({entryTypes:["mark","measure"]})):g(e),c}return Timenstein.prototype.mark=function(n,i){if(!c)return g(e),c;if(!n)return g(r),!1;if(n.indexOf(o)>-1)return g("[Timenstein] The given handle contains the namespace delimiter."),!1;var a,m=""+s+o+n;if(m in u&&u[m].locked)return g("[Timenstein] Can't create a performance mark for the given handle because it is locked."),!1;m in u?a=u[m].entries.length+1:(a=1,u[m]={locked:!1,entries:[]});var f=m+"-"+a;return t.mark(f),i&&(u[m].locked=!0),!0},Timenstein.prototype.measure=function(n,i,a){if(!c)return g(e),c;if(!n)return g(r),!1;var f=""+s+o+n;if(!(f in u))return g("[Timenstein] The given handle doesn't have any marks associated with it."),!1;var l=u[f].entries.length;if(l<2)return g("[Timenstein] The given handle must have at least two associated marks in order to make a measurement"),!1;if(!((i=i||1)<(a=a||l)&&a>i&&p(i,l)&&p(a,l)))return g("[Timenstein] The given measurement range is not valid for the handle given."),!1;f in m||(m[f]={entries:[]});var v=f+"-"+i+"-"+a,h=f+"-"+i,d=f+"-"+a;return t.measure(v,h,d),!0},Timenstein.prototype.clear=function(r,n){if(!c)return g(e),c;if(!/^m(arks|easures)$/i.test(r))return g('[Timenstein] When invoking the `clear` method, its sole argument must either be "marks" or "measures".'),!1;var i=r.substr(0,r.length-1);return t.getEntries().forEach((function(e){var a=e.name,u=e.entryType===i&&0===a.indexOf(""+s+o);n instanceof RegExp&&(u=u&&n.test(a)),u&&t["clear"+(r[0].toUpperCase()+r.slice(1))](a)})),!0},Timenstein.prototype.getMarks=function(){return u},Timenstein.prototype.getMeasures=function(){return m},Timenstein}(window,window.performance)}();
