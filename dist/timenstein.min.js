var Timenstein=function(){"use strict";var e="[Timenstein] Can't continue because the required performance APIs are not supported in this browser.",n="[Timenstein] Can't create a performance mark because a handle wasn't given for it.",r='[Timenstein] This method requires its first argument to be a string of either "marks" or "measures".';return function(t,i){var a,s,o,u,m,f={},c={},l=!1,h=i&&"mark"in i&&"measure"in i&&"getEntriesByName"in i&&"clearMarks"in i&&"clearMeasures"in i&&"PerformanceObserver"in t,d=function(e,n){return e>=1&&e<=n},g=function(e){return e.split("-")[0]},p=function(e){return"toJSON"in t.PerformanceEntry.prototype?e.toJSON():JSON.parse(JSON.stringify(e))},v=function(e){a&&console[s](e)};function Timenstein(n){return h?(l=!0,a=(n=n||{}).errorLogging||!0,s=/^(log|warn|error)$/.test(n.errorLogLevel)?n.errorLogLevel:"warn",o=n.namespace||"timenstein",u=n.namespaceDelimiter||"::",m=n.segmentDelimiter||"-",new PerformanceObserver((function(e){e.getEntries().forEach((function(e){var n=e.name,r=e.entryType;if(0===n.indexOf(""+o+u)){if("mark"===r){var t=p(e),a=g(n),s=n.split("-")[1];t.segmentNumber=s,f[a].entries.push(t)}var m,l,h;if("measure"===r){var d=g(n),v=[(h=n.split("-"))[1],h[2]],T=p(e);T.startSegment=v[0],T.endSegment=v[1],T.resources=(m=e.startTime,l=e.startTime+e.duration,i.getEntriesByType("resource").filter((function(e){return e.startTime>=m&&e.responseEnd<=l})).map((function(e){return p(e)}))),c[d].entries.push(T)}}}))})).observe({entryTypes:["mark","measure"]})):v(e),l}return Timenstein.prototype.mark=function(r,t){if(!l)return v(e),l;if(!r)return v(n),!1;if(r.indexOf(u)>-1)return v("[Timenstein] The given handle contains the namespace delimiter."),!1;if(r.indexOf(m)>-1)return v("[Timenstein] The given handle contains the segment delimiter."),!1;var a,s=""+o+u+r;if(s in f&&f[s].locked)return v("[Timenstein] Can't create a performance mark for the given handle because it is locked."),!1;s in f?a=f[s].entries.length+1:(a=1,f[s]={locked:!1,entries:[]});var c=s+"-"+a;return i.mark(c),t&&(f[s].locked=!0),!0},Timenstein.prototype.measure=function(r,t,a){if(!l)return v(e),l;if(!r)return v(n),!1;if(r.indexOf(u)>-1)return v("[Timenstein] The given handle contains the namespace delimiter."),!1;if(r.indexOf(m)>-1)return v("[Timenstein] The given handle contains the segment delimiter."),!1;var s=""+o+u+r;if(!(s in f))return v("[Timenstein] The given handle doesn't have any marks associated with it."),!1;var h=f[s].entries.length;return h<2?(v("[Timenstein] The given handle must have at least two associated marks in order to make a measurement"),!1):(t=t||1)<(a=a||h)&&a>t&&d(t,h)&&d(a,h)?(s in c||(c[s]={entries:[]}),i.measure(s+"-"+t+"-"+a,s+"-"+t,s+"-"+a),!0):(v("[Timenstein] The given measurement range is not valid for the handle given."),!1)},Timenstein.prototype.clear=function(n,t){if(!l)return v(e),l;if(!/^m(arks|easures)$/i.test(n))return v(r),!1;var a=n.substr(0,n.length-1);return i.getEntries().forEach((function(e){var r=e.name,s=e.entryType===a&&0===r.indexOf(""+o+u);t instanceof RegExp&&(s=s&&t.test(r)),s&&i["clear"+(n[0].toUpperCase()+n.slice(1))](r)})),!0},Timenstein.prototype.get=function(e,n){var t;if("marks"===e)t=f;else{if("measures"!==e)return v(r),!1;t=c}if(n instanceof RegExp){var i={};return Object.keys(t).filter((function(e){return n.test(e)})).forEach((function(e){i[e]=t[e]})),i}return t},Timenstein}(window,window.performance)}();
